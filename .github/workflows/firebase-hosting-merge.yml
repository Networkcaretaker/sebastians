# workflows/firebase-hosting-merge.yml
name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - main
      - dev

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # Clean install dependencies to fix potential Rollup issues
      - name: Clean install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm cache clean --force
          npm install
          npm audit fix --force || true
      
      # Install missing dependencies
      - name: Install missing dependencies
        run: |
          cd apps/admin
          npm install @dnd-kit/core @dnd-kit/sortable @dnd-kit/utilities
      
      # Build shared packages first
      - name: Build shared packages
        run: |
          npm run build:packages
      
      # Install Functions dependencies
      - name: Install Functions dependencies
        run: |
          cd functions
          npm install
      
      # Build Functions
      - name: Build Functions
        run: |
          cd functions
          npm run build
      
      - name: Set Development Environment
        if: github.ref == 'refs/heads/dev'
        run: |
          echo "VITE_ENV=development" >> $GITHUB_ENV
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> $GITHUB_ENV
          echo "Building for development environment"
      
      - name: Set Production Environment
        if: github.ref == 'refs/heads/main'
        run: |
          echo "VITE_ENV=production" >> $GITHUB_ENV
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
          echo "VITE_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> $GITHUB_ENV
          echo "Building for production environment"
      
      # Build both applications
      - name: Build applications
        run: |
          npm run build:all
      
      # Deploy everything (Functions + Hosting) together
      - name: Deploy to Firebase Production
        if: github.ref == 'refs/heads/main'
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SEBASTIAN_CAFE }}' > $HOME/gcp-key.json
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json
          npm install -g firebase-tools
          firebase deploy --project ${{ secrets.FIREBASE_PROJECT_ID }}
      
      # Deploy to Dev Environment
      - name: Deploy to Firebase Dev
        if: github.ref == 'refs/heads/dev'  
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SEBASTIAN_CAFE }}' > $HOME/gcp-key.json
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json
          npm install -g firebase-tools
          firebase deploy --project ${{ secrets.FIREBASE_PROJECT_ID }}